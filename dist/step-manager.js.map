{"version":3,"sources":["webpack://stepManager/webpack/universalModuleDefinition","webpack://stepManager/webpack/bootstrap","webpack://stepManager/./src/cache-manager.js","webpack://stepManager/./src/index.js","webpack://stepManager/./src/manager.js","webpack://stepManager/./src/router.js","webpack://stepManager/./src/steps.js"],"names":["CacheManager","constructor","options","userOptions","defaultOptions","cacheMethod","keyBrowserStorage","Object","assign","getDatasFromCache","filters","datasToReturn","datas","window","getItem","datasFormatted","JSON","parse","Array","isArray","filterDatas","validKeys","keys","filter","key","includes","length","map","setDatasToCache","id","datasFromCache","setItem","stringify","removeDatasFromCache","removeItem","Manager","element","steps","onComplete","onChange","isCompleted","triggerPreviousStep","bind","triggerNextStep","init","addEvents","results","analyzeSteps","Router","defaultRoute","stepsOrder","forEach","Step","index","currentStep","stepId","requestOptions","requestDatas","push","route","eventNextStep","Event","addEventListener","e","currentRouteId","getRouteId","currentRoute","stepDatas","getDatasFromStep","triggerNext","allStepsComplete","triggerPrevious","classList","add","destroy","removeEventListener","setRoute","remove","reverseNavigation","stepCreated","applicationReady","stepRedirected","hashChanged","getRoute","checkIfTheStepCanBeDisplay","event","canBeDisplayed","stepCanBeDisplayed","fallbackRoute","stepCantBeDisplayed","previousRoute","redirect","getPreviousRoute","destroyStep","createStep","routeId","canTheStepBeDisplayed","previousRouteId","render","nextRoute","getNextStepRoute","getPreviousStepRoute","routeStep","find","step","oldURL","split","indexCurrentRoute","parseInt","getIndexFromRoute","previousStep","nextStep","findIndex","location","hash","substr","Steps","clickOnCurrentStep","insertAdjacentHTML","getTemplate","getStepDatasToRender","afterRender","querySelector","selector","renderDatasFromCache","removeEvents","target","nodeName","toLowerCase","hasAttribute","clickToPreviousStep","clickToNextStep","preventDefault","stepIsReadyToSubmit","optionalStep","dispatchEvent","CustomEvent","checkIfStepIsReadyToSubmit","updateButtonToValidateStep","button"],"mappings":"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","file":"step-manager.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"stepManager\"] = factory();\n\telse\n\t\troot[\"stepManager\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","export default class CacheManager {\n\t/**\n\t * @param {options}\n\t */\n\tconstructor(options) {\n\t\tconst userOptions = options || {};\n\t\tconst defaultOptions = {\n\t\t\tcacheMethod: 'sessionStorage',\n\t\t\tkeyBrowserStorage: 'stepManager'\n\t\t};\n\n\t\t// Merge default options with user options\n\t\tthis.options = Object.assign(defaultOptions, userOptions);\n\t}\n\n\t/**\n\t * Get step datas from the cache\n\t *\n\t * @param {Array} filters Filter the request by route\n\t *\n\t * @returns {Object} Datas from the cache\n\t */\n\tgetDatasFromCache(filters) {\n\t\tlet datasToReturn = null;\n\n\t\t// Retrieve the data in the cache with the correct key\n\t\t// Cache key is composed by profile id and a static name\n\t\tconst datas =\n\t\t\twindow[this.options.cacheMethod].getItem(this.options.keyBrowserStorage) || null;\n\n\t\tif (datas !== null) {\n\t\t\t// Datas are stringify, parse them\n\t\t\tconst datasFormatted = JSON.parse(datas);\n\n\t\t\t// Check if datas must be filtered\n\t\t\tdatasToReturn = Array.isArray(filters)\n\t\t\t\t? this.filterDatas(filters, datasFormatted)\n\t\t\t\t: datasFormatted;\n\t\t}\n\t\treturn datasToReturn;\n\t}\n\n\t/**\n\t * Filter datas from cache by keys\n\t *\n\t * @param {Array} filters Filters list\n\t * @param {Object} datas Datas from browser storage\n\t *\n\t * @returns {Object} Datas filtered by keys\n\t */\n\tfilterDatas(filters, datas) {\n\t\tlet datasToReturn = null;\n\n\t\t// Loop on all route filters and extract selected routes datas\n\t\tconst validKeys = Object.keys(datas).filter((key) => filters.includes(key));\n\n\t\tif (validKeys.length) {\n\t\t\tdatasToReturn = {};\n\t\t\tvalidKeys.map((key) => (datasToReturn[key] = datas[key]));\n\t\t}\n\n\t\treturn datasToReturn;\n\t}\n\n\t/**\n\t * Set step datas to the cache\n\t *\n\t * @param {String} id Current step id\n\t * @param {Object} datas Datas of the step\n\t */\n\tsetDatasToCache({ id, datas }) {\n\t\tlet datasFromCache = this.getDatasFromCache();\n\n\t\t// First time\n\t\tif (!datasFromCache) {\n\t\t\tdatasFromCache = {};\n\t\t}\n\t\tif (!datasFromCache[id]) {\n\t\t\tdatasFromCache[id] = {};\n\t\t}\n\t\tdatasFromCache[id].datas = datas;\n\n\t\twindow[this.options.cacheMethod].setItem(\n\t\t\t`${this.options.keyBrowserStorage}`,\n\t\t\tJSON.stringify(datasFromCache)\n\t\t);\n\t}\n\n\t/**\n\t * Remove datas from the cache\n\t * Used only when all steps are completed\n\t */\n\tremoveDatasFromCache() {\n\t\twindow[this.options.cacheMethod].removeItem(`${this.options.keyBrowserStorage}`);\n\t}\n}\n","export { default as Manager } from './manager';\nexport { default as Steps } from './steps';\n","import Router from './router';\nimport CacheManager from './cache-manager';\n\n/**\n * @license MIT\n * @name StepManager\n * @version 1.2.0\n * @author: Yoriiis aka Joris DANIEL <joris.daniel@gmail.com>\n * @description: StepManager is a library to create flexible and robust multiple steps navigation with hash, validations, browser storage and hook functions.\n * {@link https://github.com/yoriiis/step-manager}\n * @copyright 2020 Joris DANIEL\n **/\n\nexport default class Manager {\n\t/**\n\t * @param {options}\n\t */\n\tconstructor(options) {\n\t\tconst userOptions = options || {};\n\t\tconst defaultOptions = {\n\t\t\telement: null,\n\t\t\tdatas: {},\n\t\t\tsteps: [],\n\t\t\tcacheMethod: 'sessionStorage',\n\t\t\tkeyBrowserStorage: 'stepManager',\n\t\t\tonComplete: () => {},\n\t\t\tonChange: () => {}\n\t\t};\n\n\t\t// Merge default options with user options\n\t\tthis.options = Object.assign(defaultOptions, userOptions);\n\n\t\tthis.isCompleted = false;\n\n\t\tthis.triggerPreviousStep = this.triggerPreviousStep.bind(this);\n\t\tthis.triggerNextStep = this.triggerNextStep.bind(this);\n\t}\n\n\t/**\n\t * Function to initialize the Manager\n\t */\n\tinit() {\n\t\tthis.addEvents();\n\n\t\tconst results = this.analyzeSteps();\n\t\tthis.steps = results.steps;\n\n\t\tthis.CacheManager = new CacheManager({\n\t\t\tcacheMethod: this.options.cacheMethod,\n\t\t\tkeyBrowserStorage: this.options.keyBrowserStorage\n\t\t});\n\n\t\tthis.Router = new Router({\n\t\t\tdefaultRoute: results.defaultRoute,\n\t\t\tstepsOrder: results.stepsOrder,\n\t\t\tsteps: this.steps,\n\t\t\tonChange: this.options.onChange,\n\t\t\tgetDatasFromCache: (filters) => this.CacheManager.getDatasFromCache(filters)\n\t\t});\n\n\t\t// Initialize the router\n\t\tthis.Router.init();\n\t}\n\n\t/**\n\t * Analyze steps and store instance\n\t * Expose new methods to each steps (requestOptions, requestDatas)\n\t * to access the Manager form steps\n\t *\n\t * @returns {Object} Object with steps instance, steps order and default route\n\t */\n\tanalyzeSteps() {\n\t\tconst steps = {};\n\t\tconst stepsOrder = [];\n\t\tlet defaultRoute;\n\n\t\t// Loop on all available steps\n\t\tthis.options.steps.forEach((Step, index) => {\n\t\t\t// Initialize the step to access them all along the application\n\t\t\tconst currentStep = new Step();\n\n\t\t\t// Get the step route\n\t\t\tconst stepId = currentStep.id;\n\n\t\t\t// Expose new functions on each steps\n\t\t\tcurrentStep.requestOptions = () => this.options;\n\t\t\tcurrentStep.requestDatas = (...filters) => this.CacheManager.getDatasFromCache(filters);\n\n\t\t\t// Store the instance reference in class properties\n\t\t\tsteps[stepId] = currentStep;\n\n\t\t\t// Set an ordered array with routes name\n\t\t\tstepsOrder.push({\n\t\t\t\tid: stepId,\n\t\t\t\troute: currentStep.route\n\t\t\t});\n\n\t\t\t// Save the default route\n\t\t\tif (index === 0) {\n\t\t\t\tdefaultRoute = currentStep.route;\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tsteps,\n\t\t\tstepsOrder,\n\t\t\tdefaultRoute\n\t\t};\n\t}\n\n\t/**\n\t * Create manager event listeners\n\t * All listeners are created on class properties to facilitate the deletion of events\n\t */\n\taddEvents() {\n\t\t// Create custom event to listen navigation changes from steps\n\t\tthis.eventNextStep = new window.Event('nextStep');\n\t\tthis.options.element.addEventListener('nextStep', this.triggerNextStep, false);\n\n\t\tthis.eventNextStep = new window.Event('previousStep');\n\t\tthis.options.element.addEventListener('previousStep', this.triggerPreviousStep, false);\n\t}\n\n\t/**\n\t * Trigger next steps\n\t *\n\t * @param {Object} e Event listener datas\n\t */\n\ttriggerNextStep(e) {\n\t\t// Check if steps are completed\n\t\tif (!this.isCompleted) {\n\t\t\tconst currentRouteId = this.Router.getRouteId(this.Router.currentRoute);\n\n\t\t\t// Get datas from the current step\n\t\t\tconst stepDatas = this.steps[currentRouteId].getDatasFromStep();\n\n\t\t\t// Update cache with datas\n\t\t\tthis.CacheManager.setDatasToCache({\n\t\t\t\tid: currentRouteId,\n\t\t\t\tdatas: stepDatas\n\t\t\t});\n\n\t\t\t// Trigger the next route if available\n\t\t\t// Else, all steps are completed\n\t\t\tthis.Router.triggerNext() || this.allStepsComplete();\n\t\t}\n\t}\n\n\t/**\n\t * Trigger previous steps\n\t *\n\t * @param {Object} e Event listener datas\n\t */\n\ttriggerPreviousStep(e) {\n\t\tthis.Router.triggerPrevious();\n\t}\n\n\t/**\n\t * All steps are complete\n\t */\n\tallStepsComplete() {\n\t\tthis.isCompleted = true;\n\n\t\t// Freeze the display to prevent multiple submit\n\t\tthis.options.element.classList.add('loading');\n\n\t\t// Execute the user callback function if available\n\t\tif (typeof this.options.onComplete === 'function') {\n\t\t\tthis.options.onComplete(this.CacheManager.getDatasFromCache());\n\t\t}\n\n\t\t// Clean the cache at the end\n\t\tthis.CacheManager.removeDatasFromCache();\n\t}\n\n\t/**\n\t * Destroy the manager (event listeners, router)\n\t */\n\tdestroy() {\n\t\tthis.options.element.removeEventListener('nextStep', this.triggerNextStep);\n\t\tthis.options.element.removeEventListener('previousStep', this.triggerPreviousStep);\n\n\t\tthis.Router.setRoute('');\n\t\tthis.Router.destroy();\n\t\tthis.options.element.remove();\n\t}\n}\n","export default class Router {\n\t/**\n\t * @param {options}\n\t */\n\tconstructor(options) {\n\t\tconst userOptions = options || {};\n\t\tconst defaultOptions = {\n\t\t\tdefaultRoute: null,\n\t\t\tstepsOrder: [],\n\t\t\tsteps: {},\n\t\t\tgetDatasFromCache: () => {},\n\t\t\tonChange: () => {}\n\t\t};\n\n\t\t// Merge default options with user options\n\t\tthis.options = Object.assign(defaultOptions, userOptions);\n\n\t\tthis.reverseNavigation = false;\n\t\tthis.stepCreated = false;\n\t\tthis.applicationReady = false;\n\t\tthis.stepRedirected = {};\n\n\t\tthis.hashChanged = this.hashChanged.bind(this);\n\t}\n\n\t/**\n\t * Initialize the router\n\t */\n\tinit() {\n\t\tthis.addEvents();\n\n\t\t// Get current route\n\t\tconst route = this.getRoute();\n\n\t\t// Declare the default route\n\t\t// If route exist, keep it, else set it to the default route\n\t\tthis.currentRoute = route === '' ? this.options.defaultRoute : route;\n\n\t\t// Init the router with the default route\n\t\tif (route === '') {\n\t\t\tthis.setRoute(this.currentRoute);\n\t\t} else {\n\t\t\t// Page started with a route, trigger hash changed\n\t\t\tthis.hashChanged();\n\t\t}\n\t}\n\n\t/**\n\t * Create router event listeners\n\t * All listeners are created on class properties to facilitate the deletion of events\n\t */\n\taddEvents() {\n\t\t// Create the hash changed event of all the application\n\t\twindow.addEventListener('hashchange', this.hashChanged, false);\n\t}\n\n\t/**\n\t * On hash changed event listener\n\t *\n\t * @param {Object} e Event listener datas\n\t */\n\thashChanged(e) {\n\t\t// Get the current route\n\t\tconst route = this.getRoute();\n\n\t\t// Check if the step can be displayed\n\t\tconst datas = this.checkIfTheStepCanBeDisplay({\n\t\t\troute: route,\n\t\t\tevent: e\n\t\t});\n\n\t\tthis.currentRoute = route;\n\n\t\tif (datas.canBeDisplayed) {\n\t\t\tthis.stepCanBeDisplayed(e, datas.fallbackRoute);\n\t\t} else {\n\t\t\tthis.stepCantBeDisplayed(e, datas.fallbackRoute);\n\t\t}\n\t}\n\n\t/**\n\t * The step can be displayed\n\t *\n\t * @param {Object} e Event listener datas\n\t */\n\tasync stepCanBeDisplayed(e) {\n\t\t// Event listener exist when user click on next step button\n\t\t// Event listener does not exist when setRoute is called manually\n\t\tif (e) {\n\t\t\t// Get the previous route\n\t\t\tthis.previousRoute = this.stepRedirected.redirect\n\t\t\t\t? this.stepRedirected.previousRoute\n\t\t\t\t: this.getPreviousRoute(e);\n\n\t\t\t// Check if previous step need to be destroyed\n\t\t\t// Prevent destruction when previousRoute does not exist or when user is redirected\n\t\t\tif (this.previousRoute) {\n\t\t\t\t// Destroy the previous step\n\t\t\t\tawait this.destroyStep(this.previousRoute);\n\n\t\t\t\t// Create the new step on destruction callback\n\t\t\t\tawait this.createStep(this.currentRoute);\n\n\t\t\t\tthis.stepCreated = true;\n\t\t\t}\n\t\t}\n\n\t\t// If destroy method was not called, create the step now\n\t\tif (!this.stepCreated) {\n\t\t\tawait this.createStep(this.currentRoute);\n\t\t}\n\n\t\t// Reset the redirect marker\n\t\tif (this.stepRedirected.redirect) {\n\t\t\tthis.stepRedirected.redirect = false;\n\t\t}\n\t}\n\n\t/**\n\t * The step can't be displayed\n\t * Redirect user to the previous route or the fallback route\n\t *\n\t * @param {Object} e Event listener datas\n\t * @param {String} fallbackRoute The fallback route of the step\n\t */\n\tstepCantBeDisplayed(e, fallbackRoute) {\n\t\tthis.stepRedirected = {\n\t\t\tredirect: true,\n\t\t\tpreviousRoute: this.getPreviousRoute(e)\n\t\t};\n\t\tthis.previousRoute = null;\n\n\t\t// If the step has a fallback route, use it\n\t\tif (fallbackRoute) {\n\t\t\tthis.setRoute(fallbackRoute);\n\t\t} else {\n\t\t\tthis.setRoute(this.options.defaultRoute);\n\t\t}\n\t}\n\n\t/**\n\t * Check if the step can be displayed\n\t *\n\t * @param {String} route Route hash\n\t * @param {Object} event Event listener datas\n\t *\n\t * @returns {Object} Status of the step render\n\t */\n\tcheckIfTheStepCanBeDisplay({ route, event }) {\n\t\tconst routeId = this.getRouteId(route);\n\n\t\t// Check the validity of the route\n\t\tif (this.options.steps[routeId]) {\n\t\t\t// Call the verification method of the step\n\t\t\t// The step itself knows if it can be rendered\n\t\t\tconst datas = this.options.steps[routeId].canTheStepBeDisplayed();\n\t\t\treturn datas;\n\t\t} else {\n\t\t\tlet fallbackRoute = this.options.defaultRoute;\n\n\t\t\t// Get fallback route from previous route if exist\n\t\t\tconst previousRoute = this.getPreviousRoute(event);\n\t\t\tconst previousRouteId = this.getRouteId(previousRoute);\n\t\t\tif (previousRoute) {\n\t\t\t\tif (this.options.steps[previousRouteId].fallbackRoute) {\n\t\t\t\t\tfallbackRoute = this.options.steps[previousRouteId].fallbackRoute;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Unknown route, redirect to the fallback route\n\t\t\treturn {\n\t\t\t\tcanBeDisplayed: false,\n\t\t\t\tfallbackRoute: fallbackRoute\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Create a step\n\t *\n\t * @param {String} route Route of the step\n\t */\n\tasync createStep(route) {\n\t\t// Get datas from cache before render the step\n\t\tconst routeId = this.getRouteId(route);\n\t\tconst stepDatas = this.options.getDatasFromCache([routeId]);\n\n\t\t// Call the render method of the step\n\t\tif (stepDatas) {\n\t\t\tthis.options.steps[routeId].render(stepDatas[routeId].datas);\n\t\t} else {\n\t\t\tthis.options.steps[routeId].render();\n\t\t}\n\n\t\t// Prevent step created before application ready\n\t\tif (!this.applicationReady) {\n\t\t\tthis.applicationReady = true;\n\t\t}\n\n\t\tif (typeof this.options.onChange === 'function') {\n\t\t\tawait this.options.onChange('create');\n\t\t}\n\t}\n\n\t/**\n\t * Destroy a step\n\t *\n\t * @param {String} route Route of the step\n\t */\n\tasync destroyStep(route) {\n\t\tconst routeId = this.getRouteId(route);\n\n\t\t// await this.options.steps[routeId].onChanged('destroy');\n\t\tif (typeof this.options.onChange === 'function') {\n\t\t\tawait this.options.onChange('destroy');\n\t\t}\n\n\t\t// Call the destroy method of the step\n\t\tthis.options.steps[routeId].destroy();\n\t}\n\n\t/**\n\t * Trigger next step navigation\n\t *\n\t * @returns {Boolean} Is the next step exist?\n\t */\n\ttriggerNext() {\n\t\tthis.reverseNavigation = false;\n\n\t\t// Store the current route as the previous route because the route hasn't changed yet\n\t\tthis.previousRoute = this.currentRoute;\n\n\t\t// Redirect to the next route or at the end\n\t\tconst nextRoute = this.getNextStepRoute(this.currentRoute);\n\t\tif (nextRoute !== 'end') {\n\t\t\tthis.setRoute(nextRoute);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Trigger previous step navigation\n\t */\n\ttriggerPrevious() {\n\t\tthis.reverseNavigation = true;\n\n\t\t// Store the current route as the previous route because the route hasn't changed yet\n\t\tthis.previousRoute = this.currentRoute;\n\n\t\tconst previousRoute = this.getPreviousStepRoute(this.previousRoute);\n\t\tthis.setRoute(previousRoute);\n\t}\n\n\t/**\n\t * Get route id from the step\n\t *\n\t * @param {String} route Route\n\t *\n\t * @returns {String} Route id\n\t */\n\tgetRouteId(route) {\n\t\tconst routeStep = this.options.stepsOrder.find((step) => step.route === route);\n\t\treturn routeStep ? routeStep.id : null;\n\t}\n\n\t/**\n\t * Get the previous route\n\t *\n\t * @param {Object} event Event listener datas\n\t *\n\t * @returns {String} Previous route\n\t */\n\tgetPreviousRoute(e) {\n\t\treturn e && e.oldURL ? e.oldURL.split('#')[1] : null;\n\t}\n\n\t/**\n\t * Get the previous route from the step order array\n\t * If there is no previous step, the function return \"end\"\n\t *\n\t * @param {String} route Current route\n\t *\n\t * @returns {String} Previous route or \"end\"\n\t */\n\tgetPreviousStepRoute(route) {\n\t\tconst indexCurrentRoute = parseInt(this.getIndexFromRoute(route));\n\t\tconst previousStep = this.options.stepsOrder[indexCurrentRoute - 1];\n\n\t\treturn previousStep ? previousStep.route : this.options.defaultRoute;\n\t}\n\n\t/**\n\t * Get the next route from the step order array\n\t * If there is no next step, the function return \"end\"\n\t *\n\t * @param {String} route Current route\n\t *\n\t * @returns {String} Next route or \"end\"\n\t */\n\tgetNextStepRoute(route) {\n\t\tconst indexCurrentRoute = parseInt(this.getIndexFromRoute(route));\n\t\tconst nextStep = this.options.stepsOrder[indexCurrentRoute + 1];\n\n\t\treturn nextStep ? nextStep.route : 'end';\n\t}\n\n\t/**\n\t * Get index of the route from the step order array\n\t *\n\t * @returns {Integer} Index of the route\n\t */\n\tgetIndexFromRoute(route) {\n\t\treturn this.options.stepsOrder.findIndex((step) => {\n\t\t\treturn step.route === route;\n\t\t});\n\t}\n\n\t/**\n\t * Get the current route\n\t *\n\t * @returns {Array} Current route\n\t */\n\tgetRoute() {\n\t\treturn window.location.hash.substr(1);\n\t}\n\n\t/**\n\t * Set the route\n\t *\n\t * @returns {String} route New value for the route\n\t */\n\tsetRoute(route) {\n\t\twindow.location.hash = route;\n\t}\n\n\t/**\n\t * Destroy the router (event listeners)\n\t */\n\tdestroy() {\n\t\twindow.removeEventListener('hashchange', this.hashChanged);\n\t}\n}\n","export default class Steps {\n\t// Set public instance fields\n\tfallbackRoute = null;\n\toptionalStep = false;\n\n\tconstructor() {\n\t\tthis.clickOnCurrentStep = this.clickOnCurrentStep.bind(this);\n\t}\n\n\t/**\n\t * Render the step\n\t *\n\t * @param {Object} datas Datas from the cache\n\t */\n\trender(datas) {\n\t\tthis.options = this.requestOptions();\n\n\t\t// Insert the generated HTML for the step\n\t\t// Get the template from the specific class and send it datas\n\t\tthis.options.element.insertAdjacentHTML(\n\t\t\t'beforeend',\n\t\t\tthis.getTemplate(this.getStepDatasToRender())\n\t\t);\n\n\t\t// The DOM is up to date, trigger the after render method with datas from the cache\n\t\tthis.afterRender(datas);\n\t}\n\n\t/**\n\t * Function executed after the render of the step\n\t *\n\t * @param {Object} datas Datas from the cache\n\t */\n\tafterRender(datas) {\n\t\t// Set cached selector\n\t\tthis.currentStep = this.options.element.querySelector(this.selector);\n\n\t\t// Add event listeners\n\t\tthis.addEvents();\n\n\t\t// If datas from cache exist and specific class has the appropriate method, render datas from the cache\n\t\tif (datas && this.renderDatasFromCache) {\n\t\t\tthis.renderDatasFromCache(datas);\n\t\t}\n\t}\n\n\t/**\n\t * Get the step datas for the render function\n\t *\n\t * @returns {null} The default behavior return empty datas\n\t */\n\tgetStepDatasToRender() {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Destroy the step\n\t */\n\tdestroy() {\n\t\t// Remove events add by the master class\n\t\tthis.removeEvents();\n\n\t\t// Remove the DOM element\n\t\tthis.currentStep.remove();\n\t}\n\n\t/**\n\t * Create steps event listeners (common on all specific step)\n\t * All listeners are created on class properties to facilitate the deletion of events\n\t */\n\taddEvents() {\n\t\t// Use event delegation for better performance\n\t\tthis.currentStep.addEventListener('click', this.clickOnCurrentStep, false);\n\t}\n\n\t/**\n\t * Click event listener on the step\n\t *\n\t * @param {Object} e Event listener datas\n\t */\n\tclickOnCurrentStep(e) {\n\t\tconst target = e.target;\n\t\tif (\n\t\t\ttarget.nodeName.toLowerCase() === 'button' &&\n\t\t\ttarget.hasAttribute('data-step-previous')\n\t\t) {\n\t\t\t// Click on the previous step button\n\t\t\tthis.clickToPreviousStep(e);\n\t\t} else if (\n\t\t\ttarget.nodeName.toLowerCase() === 'button' &&\n\t\t\ttarget.hasAttribute('data-step-next')\n\t\t) {\n\t\t\t// Click on the next step button\n\t\t\tthis.clickToNextStep(e);\n\t\t}\n\t}\n\n\t/**\n\t * Event listener to click on the next step button\n\t *\n\t * @param {Object} e Event listener datas\n\t */\n\tclickToNextStep(e) {\n\t\te.preventDefault();\n\n\t\t// Click is authorized when the step is ready to submit or if the step is optional\n\t\tif (this.stepIsReadyToSubmit || this.optionalStep) {\n\t\t\t// Dispatch the custom event to the Manager\n\t\t\tthis.options.element.dispatchEvent(new window.CustomEvent('nextStep'));\n\t\t}\n\t}\n\n\t/**\n\t * Event listener to click on the previous step button\n\t *\n\t * @param {Object} e Event listener datas\n\t */\n\tclickToPreviousStep(e) {\n\t\te.preventDefault();\n\n\t\t// Dispatch the custom event to the Manager\n\t\tthis.options.element.dispatchEvent(new window.CustomEvent('previousStep'));\n\t}\n\n\tcheckIfStepIsReadyToSubmit() {\n\t\t// If the specific class contains local datas, the step is ready to submit\n\t\tthis.stepIsReadyToSubmit = this.getDatasFromStep() !== null;\n\n\t\t// Update the submit button\n\t\tthis.updateButtonToValidateStep();\n\t}\n\n\t/**\n\t * Update the submit button\n\t */\n\tupdateButtonToValidateStep() {\n\t\tconst button = this.currentStep.querySelector('[data-step-next]');\n\n\t\tif (this.stepIsReadyToSubmit || this.optionalStep) {\n\t\t\tbutton.classList.remove('disabled');\n\t\t} else {\n\t\t\tbutton.classList.add('disabled');\n\t\t}\n\t}\n\n\t/**\n\t * Remove steps event listeners\n\t */\n\tremoveEvents() {\n\t\tthis.currentStep.removeEventListener('click', this.clickOnCurrentStep);\n\t}\n}\n"],"sourceRoot":""}